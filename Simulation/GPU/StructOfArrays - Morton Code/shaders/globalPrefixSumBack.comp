#version 460

#define WORK_GROUP_SIZE 10

layout (local_size_x = WORK_GROUP_SIZE) in;

#define PARTICLE_RADIUS 0.005f
#define TILE_SIZE 100
#define NUMBER_OF_THREADS 2160



uniform int Number_Particles;
uniform mat4 m_model;

uniform float MASS;
uniform float RESTDENSITY;
uniform int HASHSIZE;
uniform int PONTOS_LADO;
uniform float H;




layout(std430, binding = 0) buffer Histogram
{
    int histogram[];
};
layout(std430, binding = 1) buffer PrefixSum
{
    int prefixSum[];
};
layout(std430, binding = 2) buffer UseTemp
{
    int useTemp[];
};




void main()
{
    
    //index refere-se ao digito que vamos tratar
    uint index = gl_GlobalInvocationID.x;
    

    //back, agora vamos correr do fim para o inicio e vamos retirar a cada valor o seu respetivo valor no histograma
    //ComeÃ§a na penultima linha visto que a ultima linha fica igual
    for (int i = ((NUMBER_OF_THREADS-2)*10)+int(index); i>= 0; i-=10 ){
        prefixSum[i] = prefixSum[i+10] - histogram[i+10];
    }

}
#version 460

#define WORK_GROUP_SIZE 30

layout (local_size_x = WORK_GROUP_SIZE) in;

#define PARTICLE_RADIUS 0.005f
#define TILE_SIZE 100



uniform int Number_Particles;
uniform mat4 m_model;

uniform float MASS;
uniform float RESTDENSITY;
uniform int HASHSIZE;
uniform int PONTOS_LADO;
uniform float H;


layout(std430, binding = 0) buffer Index
{
    uint bufferIndex[];
};

layout(std430, binding = 1) buffer Histogram
{
    int histogram[];
};
layout(std430, binding = 2) buffer Exp
{
    uint exp[];
};
layout(std430, binding = 3) buffer UseTemp
{
    int useTemp[];
};

layout(std430, binding = 4) buffer TempIndex
{
    uint tempIndex[];
};




void main()
{
    
    
    uint index = gl_GlobalInvocationID.x;
    
    
    //clear histogram
    for (int i =0 ; i <10 ; i ++){
    	histogram[index * 10 +i] =0;
    }

    for (uint i = index * TILE_SIZE ; i < ((index*TILE_SIZE) + TILE_SIZE);i++){
    	if (useTemp[0]==0){
    		uint digit= uint(mod((bufferIndex[i]/exp[0]),10)) ;
    		histogram[index*10 + digit]++;
    	}
    	else{
    		uint digit= uint(mod((tempIndex[i]/exp[0]),10)) ;
    		histogram[index*10 + digit]++;
    	}
    	
    }

}